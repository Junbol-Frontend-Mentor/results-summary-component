// Importing Google Fonts
@import url('https://fonts.googleapis.com/css2?family=Hanken+Grotesk:ital,wght@0,100..900;1,100..900&display=swap');

//------GENERAL SETTINGS -------------------------------

// Universal reset also explicitly to all pseudo-elements
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body section,
header {
  padding: 0;
  margin: 0;
}

// Define color variables
$colors: (
  //--------PRIMARY-----------------------------------
  'light-red': hsl(0, 100%, 67%),
  'orangey-yellow': hsl(39, 100%, 56%),
  'green-teal': hsl(166, 100%, 37%),
  'cobalt-blue': hsl(234, 85%, 45%),
  //--------NEUTRAL    ----------------------------
  'light-slate-blue': hsl(252, 100%, 67%),
  'light-royal-blue': hsl(241, 81%, 54%),
  'violet-blue': hsla(256, 72%, 46%, 1),
  'persian-blue': hsla(241, 72%, 46%, 0),
  //--------STANDARD -----------------------------------
  'white': hsl(0, 0%, 100%),
  'grey': hsl(0, 0%, 50%),
  'black': hsl(0, 0%, 0%),
  'pale-blue': hsl(221, 100%, 96%),
  'light-lavender': hsl(241, 100%, 89%),
  'dark-gray-blue': hsl(224, 30%, 27%)
);

// Function to retrieve colors
@function color($color-name) {
  @return map-get($colors, $color-name);
}

// Typography Mixin with parameters
@mixin typography($weight, $size, $line-height, $color) {
  font-family: 'Hanken Grotesk', sans-serif;
  font-weight: $weight;
  font-size: $size;
  line-height: $line-height;
  color: $color;
}

/* QUERY FOR MOBILE FIRST */
html,
body {
  width: 100vw;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  align-items: center;
  background-color: color('light-grayish-cyan');
}

.main {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  //background-color: aqua;
}

.container {
  width: 100%;
  min-height: 100vh;
  display: flex;
  position:relative;
  flex-direction: column;
  //justify-content:center;
  //background-color: burlywood;
}

.blue-card {
  width: 100%;
  min-height: 30rem; /* Use min-height to accommodate varying content sizes */
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  border-radius: 0px 0px 40px 40px;
  padding: 2rem;
  background-image: linear-gradient(color('light-slate-blue'), color('cobalt-blue'));

  &__header {
    @include typography(500, 1.8rem, 0.5, color('white'));
    margin-top: 1rem;
  }

  &__circle {
    width: 14rem;
    height: 14rem;
    margin-top: 3rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    background-image: linear-gradient(color('cobalt-blue'), color('light-slate-blue'));

    h1 {
      @include typography(600, 6rem, 0.5, color('white'));
      margin-top: 4rem;
    }

    p {
      margin-top: 1rem;
      @include typography(500, 1.5rem, 1.5, color('pale-blue'));
    }
  }

  &__title {
    @include typography(500, 2rem, 1.5, color('white'));
    margin-top: 3rem;
  
  }

  &__text {
    width: 100%;
    margin-top: 2rem;
    text-align: center;
    @include typography(500, 1.4rem, 1.5, color('light-lavender'));
    //background-color: cadetblue;
  }
}

//background-color: chartreuse;

p {
  @include typography(400, 1.5rem, 0.5, color('white'));
  margin-top: 0.5rem;
  margin-bottom: 1.5rem;
}

h2 {
  @include typography(500, 2rem, 0.5, color('white'));
}



.whiteContainer {
width:80%;
display:flex;
flex-direction: column;
margin: 0 auto;
margin-top: 2rem;
//background-color:beige
}

.frames-grp {
  width: 100%;
  height: 30rem;
  margin: 0rem 0 2rem 0; // top right bottom left
  //background-color:aqua; //for testing
}

.frame {
  display: flex; // Set display to flex
  align-items: center; // Vertically center items
  justify-content: space-around; // Distribute items with space around
  width: 100%; // Set width
  height: 6rem; // Set height
  padding: 1rem; // Set padding
  margin-bottom: 2rem; // Set bottom margin
  border-radius: 10px; // Optional: add border-radius
  transition: transform 0.7s ease, background-color 0.7s ease; // Include background color transition

  &:hover,
  &:focus { // Add focus state ✅
    transform: scale(1.05);
  }

  img {
    height: 4rem; // Set image height
  }
}

.score {
  height: 3rem; // Set height
  display: flex; // Set display to flex
  align-items: center; // Vertically center text
  color: black; // Set font color
  font-weight: 800; // Set font weight
  margin-top: 1rem;
  font-size: 2rem; // Set font size

  &::after {
    content: '/100'; // Add /100 text
    color: gray; // Set color to gray
    margin-left: 0.5rem; // Add some spacing
    font-weight: 400; // Set font weight
    font-size: 1.5rem; // Set font size
  }
}

.continue-btn {
  width: 15rem;
  height: 4rem;
  @include typography(600, 1.7rem, 0.5, color('very-dark-cyan'));
  border-radius: 50px;
  background-color: color('black');
  cursor: pointer;
  border-style: none;
  margin: 0 auto;
  transition: transform 0.7s ease;
  margin-top: 0.5rem;
  color: color('white');

  &:hover,
  &:focus { // Add focus state ✅
    background-color: color('violet-blue');
    transform: scale(1.05);
  }
}

// ------- MAGIC ----------------------------

//------ FOOTER ----------------

.attribution {
  width: 100%;
  display: flex;
  justify-content: center;
  margin-top: 2rem;
  margin-bottom: 3rem; /* Keeps the footer at the bottom but only after all other content */
  color: color('grey');

  a {
    color: color('black');
    text-decoration: none;
  }
}

//------ MEDIA QUERY FOR DESKTOPS AND TABLETS ----------------

/* Media Query for Desktops and Tablets */
@media (min-width: 768px) {
  .main {
    padding: 10rem;

  }

  .container {
    width: 60rem;
    min-height: 50vh;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
  }

  .blue-card {
    width: 60rem;
    min-height: 30rem; /* Use min-height to accommodate varying content sizes */
    border-radius: 40px 40px 40px 40px;
    padding: 2rem;
    margin-right: 2rem;
  }

  .whiteContainer {
    width:80%;
    display:flex;
    flex-direction: column;
    margin: 0 auto;
    margin-top: 0.1rem;
    }

  .attribution {
    grid-area: footer; // Assigns the footer to the 'footer' area
  }
}


/////// -------- NOTES --------------------//////////
///
/* 
 */
